# general.yml
---
# General tasks for both ctrl and worker nodes
- name: Disable swap iff it's active
  command: swapoff -a
  when: ansible_swaptotal_mb > 0

- name: Disable Swap in fstab
  lineinfile:
    path: /etc/fstab
    regexp: '^([^#].*\sswap\s+sw\s+.*)$'
    state: absent
    backup: yes

- name: Set authorized key from file
  ansible.posix.authorized_key:
    user: vagrant
    state: present
    key: '{{ item }}'
  with_file:
    - ../keys/id_rsa_inaesh.pub
    - ../keys/id_rsa_martijn.pub
    - ../keys/id_rsa_sten.pub

# A2: Step 6
- name: Create k8s.conf file
  ansible.builtin.copy:
    dest: /etc/modules-load.d/k8s.conf
    content: |
      overlay
      br_netfilter
    owner: root
    group: root
    mode: '0644'

- name: Load br_netfilter module
  community.general.modprobe:
    name: br_netfilter
    state: present

# A2: Step 7
- name: Enable IPv4 forwarding
  ansible.builtin.sysctl:
    name: "{{ item }}"
    value: 1
    state: present
    reload: yes
  loop:
    - net.ipv4.ip_forward
    - net.bridge.bridge-nf-call-iptables
    - net.bridge.bridge-nf-call-ip6tables

# A2: Step 8
- name: Manage /etc/hosts
  ansible.builtin.blockinfile:
    path: /etc/hosts
    block: "{{ lookup('template', 'templates/hosts.j2') }}"
    owner: root
    group: root
    mode: '0644'

# A2: Step 9
- name: Add kubernetes signing key
  ansible.builtin.apt_key:
    url: https://pkgs.k8s.io/core:/stable:/v1.32/deb/Release.key
    state: present

- name: Add kubernetes repository as package source
  ansible.builtin.apt_repository:
    repo: deb https://pkgs.k8s.io/core:/stable:/v1.32/deb/ /
    state: present

- name: Update apt cache
  ansible.builtin.apt:
    update_cache: yes

# A2: Step 10
- name: Install K8s tools
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
  loop:
    - "containerd"
    - "runc"
    - "kubeadm"
    - "kubelet"
    - "kubectl"

# A2: Step 11
- name: Create /etc/containerd directory
  file: 
    path: /etc/containerd
    state: directory
    owner: root
    group: root
    mode: '0644'

- name: Generate default conterd config if missing
  shell: containerd config default > /etc/containerd/config.toml
  args:
    creates: /etc/containerd/config.toml
  
- name: Disable AppArmor in containerD
  lineinfile:
    path: /etc/containerd/config.toml
    regexp: '^\s*disable_apparmor\s*='
    line: '    disable_apparmor = true'

- name: Set sandbox_image to registry.k8s.io/pause:3.10
  lineinfile:
    path: /etc/containerd/config.toml
    regexp: '^\s*sandbox_image\s*='
    line: '    sandbox_image = "registry.k8s.io/pause:3.10"'

- name: Enable SystemdCgroup for runc
  lineinfile:
    path: /etc/containerd/config.toml
    regexp: '^\s*SystemdCgroup\s*='
    line: '            SystemdCgroup = true'

- name: Restart and enable containerd
  service:
    name: containerd
    state: restarted
    enabled: yes

# A2: Step 12
- name: Register kubelet for auto-start
  service:
    name: kubelet
    state: started
    enabled: yes