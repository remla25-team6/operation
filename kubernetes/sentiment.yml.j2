apiVersion: apps/v1
kind: Deployment
metadata:
  name: model-service-depl
  labels:
    app: model-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: model-service
  template:
    metadata:
      labels:
        app: model-service
    spec:
      containers:
        - name: model-service
          image: {{ MODEL_IMAGE }}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          volumeMounts:
            - mountPath: /mnt/shared
              name: my-volume
      volumes:
        - name: my-volume
          hostPath:
            path: /mnt/shared/
---
apiVersion: v1
kind: Service
metadata:
  name: model-service
spec:
  selector:
    app: model-service
  ports:
    - port: 8080
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-depl
  labels:
    app: app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      containers:
        - name: app
          image: {{ APP_IMAGE }}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          env:
            - name: MODEL_URL
              valueFrom:
                configMapKeyRef:
                  name: configmap
                  key: model.host
---
apiVersion: v1
kind: Service
metadata:
  name: app
spec:
  selector:
    app: app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-ingress
spec:
  ingressClassName: nginx
  defaultBackend:
    service:
      name: app
      port:
        number: 80
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: configmap
data:
  model.host: {{ MODEL_URL }}
---
apiVersion: v1
kind: Secret
metadata:
  name: my-secret
data:
  foo: PGV4YW1wbGVfc2VjcmV0Pg==
