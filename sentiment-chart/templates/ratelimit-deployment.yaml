{{- if .Values.rateLimit.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-ratelimit
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-ratelimit
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-ratelimit
    spec:
      containers:
      - name: ratelimit
        image: envoyproxy/ratelimit:30a4ce1a # from istio release 1.26
        imagePullPolicy: IfNotPresent
        command: ["/bin/ratelimit"]
        ports:
        - name: http
          containerPort: 8080
        - name: grpc
          containerPort: 8081
        - name: debug
          containerPort: 6070
        env:
        - name: LOG_LEVEL
          value: debug
        - name: REDIS_SOCKET_TYPE
          value: tcp
        - name: REDIS_URL
          value: {{ .Release.Name }}-redis:6379
        - name: USE_STATSD
          value: "false"
        - name: RUNTIME_ROOT
          value: /data
        - name: RUNTIME_SUBDIRECTORY
          value: ratelimit
        - name: RUNTIME_WATCH_ROOT
          value: "false"
        - name: RUNTIME_IGNOREDOTFILES
          value: "true"
        - name: HOST
          value: "::"
        - name: GRPC_HOST
          value: "::"
        volumeMounts:
        - name: config-volume
          mountPath: /data/ratelimit/config
      volumes:
      - name: config-volume
        configMap:
          name: {{ .Release.Name }}-ratelimit-config
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-ratelimit
spec:
  selector:
    app: {{ .Release.Name }}-ratelimit
  ports:
  - name: http
    port: 8080
    targetPort: 8080
    protocol: TCP
  - name: grpc
    port: 8081
    targetPort: 8081
    protocol: TCP
  - name: debug
    port: 6070
    targetPort: 6070
    protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-redis
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-redis
    spec:
      containers:
      - name: redis
        image: redis:alpine
        imagePullPolicy: IfNotPresent
        ports:
        - name: redis
          containerPort: 6379
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-redis
spec:
  selector:
    app: {{ .Release.Name }}-redis
  ports:
  - name: redis
    port: 6379
    targetPort: 6379
    protocol: TCP
{{- end }}