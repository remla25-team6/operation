{{- if .Values.rateLimit.enabled }}
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: {{ .Release.Name }}-local-ratelimit
  namespace: {{ .Release.Namespace | default "default" }}
spec:
  workloadSelector:
    labels:
      app: {{ .Release.Name }}-app  # Target app pods
  configPatches:
  - applyTo: HTTP_FILTER
    match:
      context: SIDECAR_INBOUND
      listener:
        filterChain:
          filter:
            name: "envoy.filters.network.http_connection_manager"
    patch:
      operation: INSERT_BEFORE
      value:
        name: envoy.filters.http.local_ratelimit
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.http.local_ratelimit.v3.LocalRateLimit
          stat_prefix: local_rate_limiter
          token_bucket:
            max_tokens: {{ .Values.rateLimit.globalLimit }}
            tokens_per_fill: {{ .Values.rateLimit.globalLimit }}
            fill_interval: 60s
          filter_enabled:
            runtime_key: local_rate_limit_enabled
            default_value:
              numerator: 100
              denominator: HUNDRED
          filter_enforced:
            runtime_key: local_rate_limit_enforced
            default_value:
              numerator: 100
              denominator: HUNDRED
          descriptors:
          - entries:
            - key: remote_address
            token_bucket:
              max_tokens: {{ .Values.rateLimit.userLimit }}
              tokens_per_fill: {{ .Values.rateLimit.userLimit }}
              fill_interval: 60s
  - applyTo: HTTP_ROUTE
    match:
      context: SIDECAR_INBOUND
    patch:
      operation: MERGE
      value:
        route:
          rate_limits:
          - actions:
            - remote_address: {}
{{- end }}