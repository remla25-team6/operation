#!/bin/bash

# Exit immediately if a command exits with a non-zero status.
set -e


GREEN='\033[0;32m'
NC='\033[0m' # No Color

VM_CTRL_NAME="ctrl"
VM_WORKER_NAMES="node-1 node-2" 
ALL_VM_NAMES="${VM_CTRL_NAME} ${VM_WORKER_NAMES}"
INVENTORY_PATH=".vagrant/provisioners/ansible/inventory/vagrant_ansible_inventory"
# Ansible configuration
export ANSIBLE_CONFIG="./ansible.cfg"

HELM_RELEASE_NAME="sentiment-release" 
HELM_CHART_PATH="/vagrant/sentiment-chart"

log_message() {
    echo -e "${GREEN}INFO: $1${NC}"
}

error_message() {
    echo "ERROR: $1" >&2
    exit 1
}

add_host_entry() {
    local ip="$1"
    local hostname="$2"
    if ! grep -qP "^\s*${ip}\s+${hostname}\s*$" /etc/hosts; then
        log_message "Adding host entry to /etc/hosts: ${ip} ${hostname}"
        echo "${ip} ${hostname}" | sudo tee -a /etc/hosts > /dev/null
    else
        log_message "Host entry already exists in /etc/hosts: ${ip} ${hostname}"
    fi
}


log_message "Starting infrastructure provisioning and deployment script."

log_message "Using Ansible config: $ANSIBLE_CONFIG"

# Add entries to /etc/hosts/
log_message "Updating /etc/hosts entries..."
add_host_entry "192.168.56.91" "dashboard.local"
add_host_entry "192.168.56.92" "prometheus.local"
add_host_entry "192.168.56.93" "grafana.local"

log_message "Starting and provisioning Vagrant VMs in parallel: ${ALL_VM_NAMES}"
echo "This might take a few minutes."
if ! command -v parallel &> /dev/null; then
    error_message "GNU parallel is not installed. Please install it to continue."
fi

# Vagrant up for the 3 nodes in parallel
parallel --jobs 3 --tag --linebuffer --no-notice "vagrant up {} --provision-with ansible" ::: ${ALL_VM_NAMES}
log_message "Vagrant VMs up and initial Ansible provisioning complete."

# Finalization provision for ctrl vm
log_message "Running finalization playbook (finalization.yml) on control node (${VM_CTRL_NAME})..."
ansible-playbook finalization.yml -i "${INVENTORY_PATH}" --limit "${VM_CTRL_NAME}" # THis uses the inventory generated by Vagrant
log_message "Finalization playbook complete."

# Installing helm
log_message "Deploying application using Helm on control node (${VM_CTRL_NAME})..."
vagrant ssh "${VM_CTRL_NAME}" --command "cd ${HELM_CHART_PATH} && helm upgrade --install ${HELM_RELEASE_NAME} ."

log_message "Helm deployment complete."
log_message "Infrastructure provisioning and application deployment script finished successfully!"
log_message "The app can be accessed at: 192.168.56.90:80"
log_message "Kubernetes dashboard can be accessed at: dashboard.local"
log_message "Grafana dashboard can be accessed at: grafana.local"
log_message "Prometheus dashboard can be accessed at prometheus.local"

exit 0